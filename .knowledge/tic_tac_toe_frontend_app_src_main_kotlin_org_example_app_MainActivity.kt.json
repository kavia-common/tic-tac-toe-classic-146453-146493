{"is_source_file": true, "format": "Kotlin", "description": "MainActivity class implementing a Tic Tac Toe game UI logic for Android platform, including game state management, user interactions, and visual updates with themed icons.", "external_files": ["R.layout.activity_main", "R.id.statusText", "R.id.startButton", "R.id.restartButton", "R.id.gridBoard", "R.id.cell_0", "R.id.cell_1", "R.id.cell_2", "R.id.cell_3", "R.id.cell_4", "R.id.cell_5", "R.id.cell_6", "R.id.cell_7", "R.id.cell_8", "R.drawable.ic_chess_knight", "R.drawable.ic_chess_queen", "strings.xml"], "external_methods": ["findViewById", "setContentView", "setOnClickListener", "applyIconForMark", "getDrawable", "getString"], "published": ["startGame", "resetBoard", "updateBoardUI", "updateStatusText"], "classes": [{"name": "MainActivity", "description": "Android Activity managing UI and game logic for a Tic Tac Toe game with themed icons and user interaction."}], "methods": [{"name": "onCreate", "description": "Initializes activity, binds views, sets click listeners, and sets initial UI state."}, {"name": "startGame", "description": "Starts a new game, enabling the board and resetting game state."}, {"name": "onCellClicked", "description": "Handles user taps on cells to place marks, checks for win/draw, and updates turn."}, {"name": "resetBoard", "description": "Clears the game board and resets state; can do a hard reset to start a fresh game."}, {"name": "updateBoardUI", "description": "Refreshes all cell buttons based on current game state."}, {"name": "setBoardEnabled", "description": "Enables or disables interactions with the game board."}, {"name": "updateStatusText", "description": "Updates UI text to show game status or player's turn."}, {"name": "playerLabel", "description": "Returns display label for a player ('X' or 'O')."}, {"name": "checkWinner", "description": "Determines if a player has won the game."}, {"name": "isDraw", "description": "Checks if the game has ended in a draw."}, {"name": "endGame", "description": "Ends the game and disables further moves."}, {"name": "applyIconForMark", "description": "Sets themed icon (Knight or Queen) on the button for a player's mark, with accessibility label."}], "calls": ["setContentView", "findViewById", "setOnClickListener", "applyIconForMark", "getDrawable", "getString", "setCompoundDrawablesWithIntrinsicBounds"], "search-terms": ["MainActivity", "Tic Tac Toe", "Android Kotlin", "game state management", "icon themed board"], "state": 2, "file_id": 10, "knowledge_revision": 33, "git_revision": "6e68a441c74ab077da32fe72c69dafc10293246f", "revision_history": [{"22": ""}, {"24": ""}, {"25": ""}, {"31": "6e68a441c74ab077da32fe72c69dafc10293246f"}, {"33": "6e68a441c74ab077da32fe72c69dafc10293246f"}], "hash": "4b73f05179ca1d056428ed92be718d0e", "format-version": 4, "code-base-name": "tic_tac_toe_frontend", "filename": "tic_tac_toe_frontend/app/src/main/kotlin/org/example/app/MainActivity.kt"}